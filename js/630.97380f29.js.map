{"version":3,"file":"js/630.97380f29.js","mappings":"o2BAuDAA,EAAAA,EAAAA,KAAU,KAET,IAAIC,EAASC,SAASC,cAAc,UACpCF,EAAOG,KAAO,kBACdH,EAAOI,IACN,kEACDH,SAASI,KAAKC,YAAYN,GAG1BO,GAAU,IAIX,MAAMC,GAAMC,EAAAA,EAAAA,IAAO,OAEbC,GAAQC,EAAAA,EAAAA,IAAI,CACjB,CACC,YAAe,gBACf,OAAU,mPACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,0BACf,OAAU,4MACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,8BACf,OAAU,2NACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,wBACf,OAAU,+YACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,uBACf,OAAU,2JACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,QACf,OAAU,01BACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,0BACf,OAAU,4MACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,8BACf,OAAU,2NACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,wBACf,OAAU,+YACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,EACN,KAAQ,GAET,CACC,YAAe,uBACf,OAAU,2JACV,OAAU,IACV,OAAU,KACV,KAAQ,sBACR,KAAQ,EACR,GAAM,GACN,KAAQ,KAGJJ,EAAWK,UAChB,IACC,MAAMC,QAAYL,EAAIM,cACtBJ,EAAMK,MAAQF,EAAIG,KAAKC,MAExB,CACA,MAAOC,IACNC,EAAAA,EAAAA,IAAe,CACdC,MAAO,KACPC,QAAS,eACTlB,KAAM,WAER,GAID,IAAImB,GAAWX,EAAAA,EAAAA,IAAI,IACnB,MAAMY,GAAsBZ,EAAAA,EAAAA,KAAI,GAC1Ba,EAASC,IACdC,QAAQC,IAAIF,GACZF,EAAoBR,OAAQ,EAC5BW,QAAQC,IAAIjB,EAAMK,MAAMU,EAAK,IAC7BH,EAASP,MAAQL,EAAMK,MAAMU,EAAK,GAClCC,QAAQC,IAAIL,EAASP,MAAM,E,m0CC7L5B,MAAMa,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://project_name/./src/views/front/index/components/ICSS.vue","webpack://project_name/./src/views/front/index/components/ICSS.vue?5a54"],"sourcesContent":["<template>\r\n\t<div id=\"ICSS\" style=\"min-width: 630px;\">\r\n\t\t<div class=\"head fix\" style=\"background-color: #208c5b\">\r\n\t\t\t<div class=\"tt\">\r\n\t\t\t\t<div class=\"t2\">CSS</div>\r\n\t\t\t\t<div class=\"t3\">CSS让你创建好看的网页</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"content\" id=\"content\">\r\n\t\t\t<el-card\r\n\t\t\t\tstyle=\"width: 100%; min-width: 300px; height: 550px;margin: 10px;display: flex;flex-direction: column;justify-content: center;\"\r\n\t\t\t\tv-for=\"(item, index) in essay\" :key=\"index\">\r\n\t\t\t\t<template #header>\r\n\t\t\t\t\t<div class=\"card-header\">\r\n\t\t\t\t\t\t<img :src=\"require('@/assets/img/login.gif')\" style=\"width: 100%\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<h3>{{ item.essaysTitle }}</h3>\r\n\r\n\t\t\t\t<template #footer>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{{ item.detail }}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t</br>\r\n\t\t\t\t\t<el-button type=\"primary\" style=\"margin-top: 20px\" :id=\"index\"\r\n\t\t\t\t\t\t@click=\"Views(item.id)\">查看文章</el-button>\r\n\t\t\t\t</template>\r\n\t\t\t</el-card>\r\n\t\t</div>\r\n\t\t<el-dialog v-model=\"centerDialogVisible\" width=\"900\" align-center center>\r\n\t\t\t<el-page-header :icon=\"null\">\r\n\t\t\t\t<template #content>\r\n\t\t\t\t\t<div class=\"flex items-center\">\r\n\t\t\t\t\t\t<el-avatar :size=\"42\" class=\"mr-3\"\r\n\t\t\t\t\t\t\tsrc=\"https://bucket.4ce.cn/storage/v1/f1846a9580a715fe36153cb37a3aac69.webp\" />\r\n\t\t\t\t\t\t<span class=\"text-large font-600 mr-3\" style=\"margin-left: 30px;\"> Title :</span>\r\n\t\t\t\t\t\t<span class=\"text-sm mr-2\" style=\"color: var(--el-text-color-regular)\">\r\n\t\t\t\t\t\t\t{{ essayOne.essaysTitle }}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</template>\r\n\t\t\t\t<!-- 文章内容 -->\r\n\t\t\t\t<div class=\"mt-4 text-sm font-bold\" style=\"margin: 10px;\">\r\n\t\t\t\t\t{{ essayOne.detail }}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</el-page-header>\r\n\t\t</el-dialog>\r\n\t</div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, inject, ref } from \"vue\";\r\nimport { ElNotification } from 'element-plus';\r\n\r\nonMounted(() => {\r\n\t// 动画\r\n\tvar script = document.createElement(\"script\");\r\n\tscript.type = \"text/javascript\";\r\n\tscript.src =\r\n\t\t\"https://cdn.bootcss.com/canvas-nest.js/1.0.1/canvas-nest.min.js\";\r\n\tdocument.body.appendChild(script);\r\n\r\n\t// 接口数据\r\n\tGetEssay();\r\n});\r\n\r\n//接口数据\r\nconst api = inject(\"api\");\r\n//没有接口数据时直接使用本地数据\r\nconst essay = ref([\r\n\t{\r\n\t\t\"essaysTitle\": \"介绍 js 的基本数据类型\",\r\n\t\t\"detail\": \"js 一共有五种基本数据类型，分别是 Undefined、Null、Boolean、Number、String，还有在 ES6 中新增的 Symbol 和 ES10 中新增的 BigInt 类型。Symbol 代表创建后独一无二且不可变的数据类型，它的出现我认为主要是为了解决可能出现的全局变量冲突的问题。BigInt 是一种数字类型的数据，它可以表示任意精度格式的整数，使用 BigInt 可以安全地存储和操作大整数，即使这个数已经超出了 Number 能够表示的安全整数范围。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 1,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"什么是堆？什么是栈？它们之间有什么区别和联系？\",\r\n\t\t\"detail\": \"堆和栈的概念存在于数据结构中和操作系统内存中。在数据结构中，栈中数据的存取方式为先进后出。而堆是一个优先队列，是按优先级来进行排序的，优先级可以按照大小来规定。完全二叉树是堆的一种实现方式。在操作系统中，内存被分为栈区和堆区。栈区内存由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。堆区内存一般由程序员分配释放，若程序员不释放，程序结束时可能由垃圾回收机制回收。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 2,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"undefined 与 undeclared 的区别？\",\r\n\t\t\"detail\": \"已在作用域中声明但还没有赋值的变量，是 undefined 的。相反，还没有在作用域中声明过的变量，是 undeclared 的。对于 undeclared 变量的引用，浏览器会报引用错误，如 ReferenceError: b is not defined 。但是我们可以使用 typeof 的安全防范机制来避免报错，因为对于 undeclared（或者 not defined ）变量，typeof 会返回 undefined。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 3,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"null 和 undefined 的区别？\",\r\n\t\t\"detail\": \"首先 Undefined 和 Null 都是基本数据类型，这两个基本数据类型分别都只有一个值，就是 undefined 和 null。undefined 代表的含义是未定义，null 代表的含义是空对象。一般变量声明了但还没有定义的时候会返回 undefined，null主要用于赋值给一些可能会返回对象的变量，作为初始化。undefined 在 js 中不是一个保留字，这意味着我们可以使用 undefined 来作为一个变量名，这样的做法是非常危险的，它会影响我们对 undefined 值的判断。但是我们可以通过一些方法获得安全的 undefined 值，比如说 void 0。当我们对两种类型使用 typeof 进行判断的时候，Null 类型化会返回 “object”，这是一个历史遗留的问题。当我们使用双等号对两种类型的值进行比较时会返回 true，使用三个等号时会返回 false\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 4,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"如何获取安全的 undefined 值？\",\r\n\t\t\"detail\": \"因为 undefined 是一个标识符，所以可以被当作变量来使用和赋值，但是这样会影响 undefined 的正常判断。表达式 void ___ 没有返回值，因此返回结果是 undefined。void 并不改变表达式的结果，只是让表达式不返回值。按惯例我们用 void 0 来获得 undefined。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 5,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"长文本测试\",\r\n\t\t\"detail\": \"长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试长文本测试\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 6,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"什么是堆？什么是栈？它们之间有什么区别和联系？\",\r\n\t\t\"detail\": \"堆和栈的概念存在于数据结构中和操作系统内存中。在数据结构中，栈中数据的存取方式为先进后出。而堆是一个优先队列，是按优先级来进行排序的，优先级可以按照大小来规定。完全二叉树是堆的一种实现方式。在操作系统中，内存被分为栈区和堆区。栈区内存由编译器自动分配释放，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。堆区内存一般由程序员分配释放，若程序员不释放，程序结束时可能由垃圾回收机制回收。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 7,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"undefined 与 undeclared 的区别？\",\r\n\t\t\"detail\": \"已在作用域中声明但还没有赋值的变量，是 undefined 的。相反，还没有在作用域中声明过的变量，是 undeclared 的。对于 undeclared 变量的引用，浏览器会报引用错误，如 ReferenceError: b is not defined 。但是我们可以使用 typeof 的安全防范机制来避免报错，因为对于 undeclared（或者 not defined ）变量，typeof 会返回 undefined。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 8,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"null 和 undefined 的区别？\",\r\n\t\t\"detail\": \"首先 Undefined 和 Null 都是基本数据类型，这两个基本数据类型分别都只有一个值，就是 undefined 和 null。undefined 代表的含义是未定义，null 代表的含义是空对象。一般变量声明了但还没有定义的时候会返回 undefined，null主要用于赋值给一些可能会返回对象的变量，作为初始化。undefined 在 js 中不是一个保留字，这意味着我们可以使用 undefined 来作为一个变量名，这样的做法是非常危险的，它会影响我们对 undefined 值的判断。但是我们可以通过一些方法获得安全的 undefined 值，比如说 void 0。当我们对两种类型使用 typeof 进行判断的时候，Null 类型化会返回 “object”，这是一个历史遗留的问题。当我们使用双等号对两种类型的值进行比较时会返回 true，使用三个等号时会返回 false\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 9,\r\n\t\t\"view\": 0\r\n\t},\r\n\t{\r\n\t\t\"essaysTitle\": \"如何获取安全的 undefined 值？\",\r\n\t\t\"detail\": \"因为 undefined 是一个标识符，所以可以被当作变量来使用和赋值，但是这样会影响 undefined 的正常判断。表达式 void ___ 没有返回值，因此返回结果是 undefined。void 并不改变表达式的结果，只是让表达式不返回值。按惯例我们用 void 0 来获得 undefined。\",\r\n\t\t\"remark\": \"无\",\r\n\t\t\"author\": \"陈凯\",\r\n\t\t\"time\": \"2020-05-10 10:00:00\",\r\n\t\t\"like\": 0,\r\n\t\t\"id\": 10,\r\n\t\t\"view\": 0\r\n\t}\r\n]);\r\nconst GetEssay = async () => {\r\n\ttry {\r\n\t\tconst res = await api.GetTheEssay();\r\n\t\tessay.value = res.data.essays;\r\n\r\n\t}\r\n\tcatch (error) {\r\n\t\tElNotification({\r\n\t\t\ttitle: '提示',\r\n\t\t\tmessage: '接口未上线，展示本地数据',\r\n\t\t\ttype: 'warning', // 使用警告类型的通知\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//卡片ID\r\nlet essayOne = ref([]);\r\nconst centerDialogVisible = ref(false);\r\nconst Views = (id) => {\r\n\tconsole.log(id);\r\n\tcenterDialogVisible.value = true;\r\n\tconsole.log(essay.value[id - 1]);\r\n\tessayOne.value = essay.value[id - 1];\r\n\tconsole.log(essayOne.value);\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n@import \"../../../../assets/css/general.css\";\r\n\r\n::v-deep .el-card__footer {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\nh3 {\r\n\tmargin: 0 !important;\r\n}\r\n\r\np {\r\n\theight: 80px;\r\n\tdisplay: -webkit-box;\r\n\toverflow: hidden;\r\n\t-webkit-line-clamp: 3;\r\n\t/* 显示行数 */\r\n\t-webkit-box-orient: vertical;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\nh3 {\r\n\tmargin: 0 !important;\r\n\tdisplay: -webkit-box;\r\n\toverflow: hidden;\r\n\t-webkit-line-clamp: 1;\r\n\t/* 显示行数 */\r\n\t-webkit-box-orient: vertical;\r\n\ttext-overflow: ellipsis;\r\n}\r\n\r\n\r\n/* 卡片 */\r\n::v-deep footer {\r\n\tbackground: white !important;\r\n\tpadding-bottom: 0;\r\n}\r\n\r\n::v-deep .el-dialog__headerbtn {\r\n\tdisplay: none;\r\n}\r\n\r\n::v-deep .items-center {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n\r\n::v-deep .items-center span {\r\n\tmargin-left: 8px;\r\n}\r\n\r\n::v-deep .el-page-header__main {\r\n\tmin-height: 500px;\r\n}\r\n\r\n::v-deep .el-page-header__back {\r\n\tdisplay: none;\r\n}\r\n\r\n/* ::v-deep footer span {\r\n\tcolor: white\r\n} */\r\n</style>\r\n","import script from \"./ICSS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ICSS.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ICSS.vue?vue&type=style&index=0&id=714a1310&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-714a1310\"]])\n\nexport default __exports__"],"names":["onMounted","script","document","createElement","type","src","body","appendChild","GetEssay","api","inject","essay","ref","async","res","GetTheEssay","value","data","essays","error","ElNotification","title","message","essayOne","centerDialogVisible","Views","id","console","log","__exports__"],"sourceRoot":""}